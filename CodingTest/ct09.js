/* 직사각형 넓이 구하기
문제 설명
2차원 좌표 평면에 변이 축과 평행한 직사각형이 있습니다. 직사각형 네 꼭짓점의 좌표 [[x1, y1], [x2, y2], [x3, y3], [x4, y4]]가 담겨있는 배열 dots가 매개변수로 주어질 때, 직사각형의 넓이를 return 하도록 solution 함수를 완성해보세요.

제한사항
dots의 길이 = 4
dots의 원소의 길이 = 2
-256 < dots[i]의 원소 < 256
잘못된 입력은 주어지지 않습니다.
입출력 예
  dots	                              result
[[1, 1], [2, 1], [2, 2], [1, 2]]	    1
[[-1, -1], [1, 1], [1, -1], [-1, 1]]	4
입출력 예 설명
입출력 예 #1

좌표 [[1, 1], [2, 1], [2, 2], [1, 2]] 를 꼭짓점으로 갖는 직사각형의 가로, 세로 길이는 각각 1, 1이므로 직사각형의 넓이는 1 x 1 = 1입니다.
입출력 예 #2

좌표 [[-1, -1], [1, 1], [1, -1], [-1, 1]]를 꼭짓점으로 갖는 직사각형의 가로, 세로 길이는 각각 2, 2이므로 직사각형의 넓이는 2 x 2 = 4입니다.
*/

function solution(dots) {
    var x = 0;
    var y = 0;
    var x_point = [];
    var y_point = [];
    for(var i = 0; i<dots.length; i++){ // 꼭지점 좌표 중 x 값은 x_point, y 값은 y_point로 나눠서 저장
        x_point.push(dots[i][0])
        y_point.push(dots[i][1])
        }
    x_point.sort((a,b) => a-b) // 오름차순으로 정렬 해준 뒤
    y_point.sort((a,b) => a-b)
    for(var j = 1; j<512; j++){
        if(x_point[0] !== x_point[3]){ // 각 배열에서 가장 작은 값이 가장 큰 값과 같아지려면 얼마나 더해야하는가를 구했음(좌표 간 거리 도출)
        x_point[0]++
        x++ // 가로 길이
    }
        if(y_point[0] !== y_point[3]){
        y_point[0]++
        y++ // 세로 길이
    }
    }
    return x*y; // 직사각형 넓이
}